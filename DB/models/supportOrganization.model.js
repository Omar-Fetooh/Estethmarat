import mongoose, { Schema, model } from 'mongoose';
import validator from 'validator';
import bcrypt from 'bcryptjs';
import crypto from 'crypto';
const supportOrganizationSchema = new Schema(
  {
    name: {
      type: String,
      required: true,
      minLength: 3,
      maxLength: 50,
      trim: true,
    },
    username: { type: String, required: true, unique: true },
    organizationType: {
      type: String,
      required: true,
      enum: [
        'حاضنة الأعمال',
        'مسرعة الأعمال',
        'مركز الابتكار والتكنولوجيا',
        'رأس المال الجريء',
        'مؤسسة تمويل جماعي',
        'بنك/ مؤسسة تمويلية',
        'منظمة حكومية/ هيئة اقتصادية',
        'أخرى',
      ],
    },
    image: {
      secure_url: {
        type: String,
        required: true,
      },
      public_id: {
        type: String,
        required: true,
        unique: true,
      },
    },
    email: {
      type: String,
      required: true,
      unique: true,
      match: [/^\S+@\S+\.\S+$/, 'email is invalid'],
      required: [true, 'email is required'],
    },
    notification: {
      type: Boolean,
      default: true,
      required: true,
    },
    phoneNumber: { type: String, required: true },
    website: {
      type: String,
      match: [/^https?:\/\/.+/, 'Invalid URL format'],
      required: true,
    },
    password: { type: String, required: true, trim: true, minLength: 6 },
    supportedProjectFields: {
      type: [String],
      required: true,
      enum: [
        'الذكاء الاصطناعي والتعلم الآلي',
        'البرمجيات كخدمة (SaaS) والتطبيقات',
        'التكنولوجيا المالية (FinTech) والمدفوعات الرقمية',
        'الأمن السيبراني وحماية البيانات',
        'البلوكتشين والعملات الرقمية',
        'إنترنت الأشياء (IoT) والأتمتة الذكية',
        'الواقع الافتراضي والمعزز (VR/AR)',
        'الحوسبة السحابية وتحليل البيانات الضخمة',
        'الروبوتات والأنظمة الذكية',
        'التجارة الإلكترونية والمتاجر الرقمية',
        'التجزئة والماركات التجارية',
        'الخدمات اللوجستية والتوصيل',
        'إدارة سلاسل الإمداد والتوزيع',
        'السياحة والسفر والفنادق',
        'إدارة الفعاليات والترفيه',
        'التأمين والخدمات المالية',
        'التطوير العقاري السكني والتجاري',
        'المدن الذكية والبنية التحتية الرقمية',
        'تقنيات البناء والهندسة المعمارية',
        'المقاولات والتشييد',
        'إدارة الممتلكات وصناديق العقارات',
        'التصنيع الذكي والروبوتات الصناعية',
        'السيارات الكهربائية وتقنيات التنقل الذكي',
        'الطباعة ثلاثية الأبعاد والتصنيع المبتكر',
        'الصناعات الثقيلة والمعدات الهندسية',
        'الصناعات الكيميائية والبتروكيماويات',
        'الإلكترونيات وأشباه الموصلات',
        'الطاقة المتجددة (الطاقة الشمسية، الرياح، الهيدروجين الأخضر)',
        'إدارة النفايات وإعادة التدوير',
        'تحلية المياه ومعالجة المياه الذكية',
        'الكفاءة الطاقية وحلول الاستدامة',
        'النفط والغاز والطاقة التقليدية',
        'الزراعة الذكية والتكنولوجيا الزراعية (AgriTech)',
        'إنتاج وتصنيع الأغذية والمشروبات',
        'الأمن الغذائي والاستدامة الزراعية',
        'الاستزراع السمكي والموارد البحرية',
        'تقنيات الأسمدة والمبيدات الحيوية',
        'الأدوية والتكنولوجيا الحيوية (BioTech)',
        'الأجهزة الطبية والتقنيات العلاجية',
        'الرعاية الصحية الرقمية والتطبيب عن بُعد ',
        'الذكاء الاصطناعي في الطب وتحليل البيانات الصحية',
        'الطب التجديدي والعلاج الجيني',
        'صناعة المحتوى الرقمي والإعلام الجديد',
        'ألعاب الفيديو والرياضات الإلكترونية',
        'السينما والإنتاج الإعلامي',
        'البث المباشر ومنصات الفيديو',
        'الصحافة الرقمية والإعلام التفاعلي',
        'تكنولوجيا التعليم (EdTech) والتعلم الإلكتروني',
        'الجامعات والمراكز البحثية',
        'التدريب المهني وتنمية المهارات',
        'الذكاء الاصطناعي في التعليم',
        'ريادة الأعمال والاستثمار',
        'رأس المال الجريء (Venture Capital) والاستثمارات الناشئة',
        'الأسهم والأسواق المالية',
        'العقارات والصناديق الاستثمارية',
        'القروض والتمويل الجماعي',
        'العملات الرقمية والاستثمار اللامركزي (DeFi)',
        'الطيران وتقنيات الفضاء',
        'المواصلات الذكية والبنية التحتية للطرق',
        'الشحن والنقل البحري',
        'القطارات والمترو وأنظمة النقل الجماعي',
        'الأزياء والملابس',
        'مستحضرات التجميل والعناية الشخصية',
        'المنتجات المنزلية والإلكترونية',
        'المجوهرات والساعات الفاخرة',
        'الأدوية البيطرية والتكنولوجيا البيطرية',
        'مستلزمات الحيوانات الأليفة',
        'مزارع الإنتاج الحيواني الحديثة',
        'الأجهزة الطبية المساعدة',
        'البرمجيات والتقنيات الموجهة لذوي الاحتياجات الخاصة',
        'إمكانية الوصول الرقمي والتصميم الشامل',
      ],
    },
    // supportedProjectsCount: { type: Number, default: 0 },
    targetFundingValue: { type: Number },
    supportTypes: {
      type: [String],
      required: true,
      enum: [
        'تمويل واستثمار',
        'دعم مالي ومصرفي',
        'استشارات قانونية وإدارية',
        'تطوير الأعمال والتخطيط الاستراتيجي',
        'تدريب وإرشاد',
        'منح وتسهيلات حكومية',
        'تطوير تقني ودعم تكنولوجي',
        'دعم العمليات التشغيلية واللوجستية',
        'حاضنات ومساحات عمل',
        'تسويق وترويج',
        'أخرى',
      ],
    },
    targetedProjectStages: {
      type: [String],
      required: true,
      enum: [
        'Pre-Seed (النماذج الأولية)',
        'Seed (مرحلة التأسيس والتمويل الأولي)',
        'Series A (التوسع الأولي)',
        'Series B (التوسع والنمو السريع)',
        'Late Stage / IPO (ما قبل الطرح العام)',
      ],
    },

    providedPrograms: { type: String, required: true },
    commercialRegistrationNumber: {
      type: String,
      required: true,
      unique: true,
    },
    taxIdNumber: { type: String },
    representativeName: { type: String, required: true },
    representativeEmail: { type: String, required: true },
    representativeNationalId: { type: String, required: true },
    description: { type: String, required: true },
    numberOfProjectsSupported: { type: Number, required: true },
    role: {
      type: String,
      default: 'supportOrganization',
    },
    country: {
      type: String,
      required: [true, 'Select the country for this company now!'],
      enum: [
        'السعوديه',
        'الإمارات',
        'مصر',
        'الكويت',
        'البحرين',
        'قطر',
        'عمان',
        'الأردن',
        'فلسطين',
        'اليمن',
        'لبنان',
        'الجزائر',
        'المغرب',
        'تونس',
        'ليبيا',
        'السودان',
        'موريتانيا',
        'جيبوتي',
        'جزر_القمر',
        'الصومال',
      ],
    },
    headQuarter: {
      type: String,
      required: [true, 'Please select the head quarter for the company now!'],
      enum: [
        'الرياض',
        'جدة',
        'مكة المكرمة',
        'الدمام',
        'المدينة المنورة',
        'الخبر',
        'الطائف',
        'القصيم',
        'الخرج',
        'تبوك',
        'دبي',
        'أبوظبي',
        'الشارقة',
        'العين',
        'رأس الخيمة',
        'الفجيرة',
        'أم القيوين',
        'الذيد',
        'القاهرة',
        'الإسكندرية',
        'الجيزة',
        'الأقصر',
        'أسوان',
        'طنطا',
        'المنصورة',
        'شرم الشيخ',
        'المحلة الكبرى',
        'الزقازيق',
        'الكويت العاصمة',
        'الفروانية',
        'حولي',
        'الجهراء',
        'مبارك الكبير',
        'الأحمدي',
        'الصور',
        'العديلية',
        'المنامة',
        'المحرق',
        'الحد',
        'سترة',
        'الرفاع',
        'مركز البحرين التجاري',
        'السانبوسة',
        'مدينة عيسى',
        'الدوحة',
        'الريان',
        'الوكرة',
        'الخور',
        'مسيعيد',
        'الشیحانیة',
        'أم صلال',
        'الزبارة',
        'مسقط',
        'صلالة',
        'نزهة',
        'نزوى',
        'البريمي',
        'صحار',
        'الرستاق',
        'مطرح',
        'بهلاء',
        'عمان',
        'إربد',
        'الزرقاء',
        'السلط',
        'عجلون',
        'الكرك',
        'معان',
        'مادبا',
        'الطفيلة',
        'القدس',
        'رام الله',
        'غزة',
        'نابلس',
        'بيت لحم',
        'الخليل',
        'جنين',
        'أريحا',
        'طولكرم',
        'قلقيلية',
        'صنعاء',
        'عدن',
        'تعز',
        'المكلا',
        'المعلا',
        'إب',
        'الحديدة',
        'لحج',
        'الضالع',
        'ذمار',
        'بيروت',
        'طرابلس',
        'صيدا',
        'صور',
        'بعلبك',
        'زحلة',
        'جبيل',
        'النبطية',
        'المتن',
        'كسروان',
        'الجزائر العاصمة',
        'وهران',
        'قسنطينة',
        'عنابة',
        'المدية',
        'تلمسان',
        'سيدي بلعباس',
        'البليدة',
        'الشلف',
        'ورقلة',
        'الرباط',
        'الدار البيضاء',
        'مراكش',
        'فاس',
        'طنجة',
        'أكادير',
        'العيون',
        'تطوان',
        'مكناس',
        'الجدية',
        'تونس العاصمة',
        'سوسة',
        'صفاقس',
        'قابس',
        'المنستير',
        'المهدية',
        'قصر هلال',
        'قليبية',
        'نابل',
        'بنزرت',
        'طرابلس',
        'بنغازي',
        'مصراتة',
        'البيضاء',
        'الزاوية',
        'طرابلس',
        'درنة',
        'سبها',
        'الخمس',
        'سرت',
        'الخرطوم',
        'أم درمان',
        'الخرطوم بحري',
        'مدني',
        'بورتسودان',
        'الأبيض',
        'كوستي',
        'كادقلي',
        'دنقلا',
        'نيالا',
        'نواكشوط',
        'نواديبو',
        'كيفة',
        'الزويرات',
        'نواكشوط الجنوبية',
        'ألاك',
        'بوتلميت',
        'الشيخ',
        'جيبوتي العاصمة',
        'علي سبيح',
        'تخوتا',
        'سمحة',
        'مخا',
        'مريسي',
        'موروني',
        'فومبوني',
        'موتسامودو',
        'دوموني',
        'بامبي',
        'ويوني',
        'مقديشو',
        'هرجيسا',
        'بوصاصو',
        'جروي',
        'كيسمايو',
        'بلدوين',
        'بيدوا',
        'طوسمريب',
        'شكوشو',
      ],
    },
    acceptNotifications: {
      type: Boolean,
      default: false,
      required: true,
    },
    acceptedByAdmin: {
      type: Boolean,
      default: false,
    },
    isEmailVerified: {
      type: Boolean,
      default: false,
    },
    isMarkedAsDeleted: {
      type: Boolean,
      default: false,
    },
    createdAt: {
      type: Date,
      default: Date.now,
    },
    passwordResetToken: String,
    passwordResetTokenExpires: Date,
    passwordChangedAt: Date,
  },
  { timestamps: true }
);
supportOrganizationSchema.pre('validate', function (next) {
  this.supportedProjectFields = [...JSON.parse(this.supportedProjectFields)];
  this.targetedProjectStages = [...JSON.parse(this.targetedProjectStages)];
  this.supportTypes = [...JSON.parse(this.supportTypes)];
  next();
});
supportOrganizationSchema.pre('save', async function (next) {
  // ask for if password has been modified or not
  if (!this.isModified('password')) return next();
  this.password = await bcrypt.hash(this.password, 12);
  this.passwordConfirm = undefined;
  next();
});
// change passwordChangeAt properity
supportOrganizationSchema.pre('save', function (next) {
  if (!this.isModified('password') || !this.isNew) return next();
  this.passwordChangedAt = Date.now() - 1000;
  next();
});

// instance method to login
supportOrganizationSchema.methods.correctPassword = async (
  inputPassword,
  savedPassword
) => {
  return await bcrypt.compare(inputPassword, savedPassword);
};

// create password reset token
supportOrganizationSchema.methods.createPasswordResetToken = function () {
  const resetToken = crypto.randomBytes(32).toString('hex');
  this.passwordResetToken = crypto
    .createHash('sha256')
    .update(resetToken)
    .digest('hex');
  this.passwordResetTokenExpires = Date.now() + 10 * 1000 * 60;
  return resetToken;
};
// check if the user change password after issued jwt or not
supportOrganizationSchema.methods.passwordChangeAfter = function (
  issuedTimeStamp
) {
  if (this.passwordChangedAt) {
    const passwordChangedAtSeconds = parseInt(
      this.passwordChangedAt.getTime() / 1000,
      10
    );
    return passwordChangedAtSeconds > issuedTimeStamp;
  }
  return false;
};

export const supportOrganization =
  mongoose.models.SupportOrganization ||
  model('SupportOrganization', supportOrganizationSchema);
